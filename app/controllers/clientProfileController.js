let clientProfile = require('../models/clientProfile');
let clientPicture = require('../models/clientPictures');
let clientVideo = require('../models/clientVideos');

let client_profile_controller = { // the name of the client should be saved in a session to use it to save  pictures or video uploaded by the client

        createClientProfile:function(req, res){

            res.render('createClientProfile');

        },

        saveClientProfile:function(req, res){

            console.log(req.body);
            var clientName = "retrieve it from session";                     ////////////session
            var clientDescription = req.body.description;
            var clientInfo = req.body.clientInfo;
            var clientPaymentInfo = req.body.paymentInfo;

            var clientProfileData = {
                                    clientName:clientName,
                                    clientDescription:clientDescription,
                                    clientInfo:clientInfo,
                                    paymentInfo:clientPaymentInfo

                                  };

                                  console.log(clientProfileData);

            let client_profile = new clientProfile(clientProfileData);

            client_profile.save(function(err, client_profile){

                    if(err){
                      console.log(err.message);
                    }else{
                      console.log("client profile saved!");
                    }

            });


        },

        uploadClientPicture:function(req, res){ // stores the name of the client which is unique and the name of the picture which is also unique in the database

      if(req.file == null){
        console.log("there is no picture chosen!");
      }else{
        var mime_type = req.file.mimetype;                      // mime_type contains the type of file with extension, for images it contains 'image/png' the extension might change
        var check_type = mime_type.substr(0,5);                 // check_type substring the first five letters which is an image if the file is a image

        if(check_type != 'image'){
          console.log("not image!");
          console.log(mime_type);
        }
        else {
        console.log(mime_type);
        var picture_name = req.file.filename;                 // the filename is generated by multer and it's unique

        /////////
        var picture = {
                     clientName:"retrieve it from session",           ////////////session
                     pictureName:picture_name
                   };
        let client_picture = new clientPicture(picture);

        client_picture.save(function(err, client_picture){
          if(err){
            console.log(err.message);
          }else{
            console.log("Picture is saved successfully!");
          }
          });
        }
      }
      },

        uploadClientVideo:function(req, res){   // stores the name of the client which is unique and the name of the video which is also unique in the database

      if(req.file == null){
        console.log("there is no video chosen!");
      }else{
        var mime_type = req.file.mimetype;               // mime_type contains the type of file with extension, for videos it contains 'video/mp4' the extension might change
        var check_type = mime_type.substr(0,5);         // check_type substring the first five letters which is a video if the file is a video

        if(check_type != 'video'){
          console.log("not video!");
          console.log(mime_type);
        }
        else {
        console.log(mime_type);
        var video_name = req.file.filename;           // the filename is generated by multer and it's unique

        /////////
        var video = {
                     clientName:"retrieve it from session",               ////////////session
                     videoName:video_name
                   };
        let client_video = new clientVideo(video);

        client_video.save(function(err, client_video){
          if(err){
            console.log(err.message);
          }else{
            console.log("Video is saved successfully!");
          }
        });
        }
      }
    }



}

module.exports = client_profile_controller;
